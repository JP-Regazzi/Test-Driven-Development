openapi: 3.0.0
info:
  title: FlightApi
  version: Mars2023
servers:
  - url: http://localhost:5000
components:
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
    BearerAuth:            
      type: http
      scheme: bearer
paths:
  /:
    get:
      tags:
        - Home
      summary: Home
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /login:
    get:
      tags:
        - Login
      summary: Login
      security:
        - BasicAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
              example:
                token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwdWJsaWNfaWQiOiIwMTExMTIyMjEiLCJleHAiOjE2Nzc4NzI3NTN9.FheUCqV1kMTbvleGU6OGLaKplqYLlJukeDF0hEcBvQY
  /Cities:
    get:
      tags:
        - Cities
      summary: GetCityByCode
      parameters:
        - name: CityCode
          in: query
          schema:
            type: string
          example: PAR
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - CityInitials: PAR
                  CityName: Paris
    post:
      security:
        - BearerAuth: []
      tags:
        - Cities
      summary: AddCity
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                CityInitials: CMN
                CityName: Casablanca
      responses:
        '201':
          description: CREATED
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                CityInitials: CMN
                CityName: Casablanca
  /Cities/{CityCode}:
    patch:
      security:
        - BearerAuth: []
      tags:
        - Cities
      summary: UpdateCity
      parameters:
        - name: CityCode
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          'application/json':
            schema:
              type: string
              example: 
                {"CityInitials":"CMN","CityName":"Casablanca"}
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                CityInitials: CMN
                CityName: Casablanca
    delete:
      security:
        - BearerAuth: []
      tags:
        - Cities
      summary: DeleteCity
      parameters:
        - name: CityCode
          in: path
          schema:
            type: string
          required: true      
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                'true': 'City deleted CMN '
  /RandomFlights:
    get:
      tags:
        - Flights
      summary: RandomFlights
      parameters:
        - name: Count
          in: query
          schema:
            type: integer
          example: '2'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - Airline: NW
                  ArrivalCity: London
                  ArrivalTime: 05:31 PM
                  DepartureCity: Paris
                  DepartureTime: 03:50 PM
                  FlightNumber: 11120
                  Price: 147.4
                  PriceFirst: 176.88
                  PriceBusiness: 191.62
                  SeatsAvailable: 250
                  DayOfWeek: Friday
                  Date: '2023-02-10'
                - Airline: LH
                  ArrivalCity: Zurich
                  ArrivalTime: 03:21 PM
                  DepartureCity: San Francisco
                  DepartureTime: 02:23 PM
                  FlightNumber: 14468
                  Price: 167.8
                  PriceFirst: 201.36
                  PriceBusiness: 218.14
                  SeatsAvailable: 250
                  DayOfWeek: Sunday
                  Date: '2023-01-29'
  /Flights/{FlightNumber}:
    get:
      tags:
        - Flights
      summary: GetFlight
      parameters:
        - name: FlightNumber
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                Airline: NW
                ArrivalCity: London
                ArrivalTime: 05:31 PM
                DepartureCity: Paris
                DepartureTime: 03:50 PM
                FlightNumber: 11120
                Price: 147.4
                PriceFirst: 176.88
                PriceBusiness: 191.62
                SeatsAvailable: 250
                DayOfWeek: Friday
    delete:
      security:
        - BearerAuth: []
      tags:
        - Flights
      summary: DeleteFlight
      parameters:
        - name: FlightNumber
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                'true': 'Flight deleted 100000 '
  /Flights:
    get:
      tags:
        - Flights
      summary: SearchFlights
      parameters:
        - name: DepartureCity
          in: query
          schema:
            type: string
          example: Paris
        - name: ArrivalCity
          in: query
          schema:
            type: string
          example: London
        - name: Date
          in: query
          schema:
            type: string
          example: '2023-11-16'
      responses:
        '500':
          description: INTERNAL SERVER ERROR
          headers:
            Content-Type:
              schema:
                type: string
                example: text/html; charset=utf-8
          content:
            text/plain:
              schema:
                type: string
              example: >-
                <!doctype html><html lang=en><title>500 Internal Server
                Error</title><h1>Internal Server Error</h1><p>The server
                encountered an internal error and was unable to complete your
                request. Either the server is overloaded or there is an error in
                the application.</p>
    post:
      security:
        - BearerAuth: []
      tags:
        - Flights
      summary: AddFlight
      requestBody:
        content:
          'application/json':
            schema:
              type: string
              example: 
                { "Airline": "RAM", "ArrivalCity": "Paris", "ArrivalInitials": "PAR", "ArrivalTime": "11:00 AM", "DepartureCity": "Denver", "DepartureInitials": "DEN", "DepartureTime": "23:23 AM", "Price": 23.0, "PriceFirst": 233.0, "PriceBusiness": 2333.0, "SeatsAvailable": 10, "DayOfWeek": "Monday"}
      responses:
        '201':
          description: CREATED
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                Airline: RAM
                ArrivalCity: Paris
                ArrivalTime: 11:00 AM
                DepartureCity: Casablanca
                DepartureTime: 08:00 AM
                FlightNumber: 100000
                Price: 112
                PriceFirst: 126
                PriceBusiness: 150
                SeatsAvailable: 100
                DayOfWeek: Monday
  /FlightOrders:
    get:
      tags:
        - Orders
      summary: GetCustomerOrder
      parameters:
        - name: CustomerName
          in: query
          schema:
            type: string
          example: Dupont
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: text/html; charset=utf-8
          content:
            text/plain:
              schema:
                type: string
              example: 
                {}
    post:
      tags:
        - Orders
      summary: BookFight
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                DepartureDate: '2023-11-16'
                FlightNumber: 10519
                CustomerName: ONEPOINT
                NumberOfTickets: 2
                Class: First
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      security:
        - BearerAuth: []
      tags:
        - Orders
      summary: DeleteAllOrders
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - Class: Business
                  CustomerName: John Doe
                  DepartureDate: 2014-7-11 7:59
                  FlightNumber: 6232
                  NumberOfTickets: 1
                  OrderNumber: 1
                  TotalPrice: 135.2
  /FlightOrders/{OrderNumber}:
    patch:
      tags:
        - Orders
      summary: UpdateOrder
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                DepartureDate: '2023-11-16'
                FlightNumber: 10519
                CustomerName: ONEPOINT
                NumberOfTickets: 10
                Class: Business
      parameters:
        - name: OrderNumber
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                Class: First
                CustomerName: IMHAH
                DepartureDate: 2023-1-21 08:00
                FlightNumber: 99558
                NumberOfTickets: 3
                OrderNumber: 81
                TotalPrice: 666.72
    get:
      tags:
        - Orders
      summary: GetOrder
      parameters:
        - name: OrderNumber
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                Class: First
                CustomerName: IMHAH
                DepartureDate: 2023-1-21 08:00
                FlightNumber: 99558
                NumberOfTickets: 3
                OrderNumber: 81
                TotalPrice: 666.72
    delete:
      tags:
        - Orders
      summary: DeleteOrder
      parameters:
        - name: OrderNumber
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                'true': 'Order deleted xx '